package graphics;
public class Build{
	//IMPLEMENTED BY */*/*/*/factor_prime/*/*/*/*/*
	/*
	__________________________¶¶_______________
	__________________¶¶____¶¶_________________
	__________¶¶¶¶¶¶¶¶¶¶¶¶¶__¶¶¶¶______________
	______¶¶¶¶__¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶________________
	__¶¶¶¶¶¶____¶¶¶¶¶¶¶¶¶_____¶¶___¶¶¶¶________
	__¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶_____¶¶¶¶¶¶______
	____¶¶¶¶¶¶__¶¶____¶¶¶¶¶¶_________¶¶¶¶¶¶____
	____¶¶______¶¶¶¶______¶¶¶¶¶¶___¶¶¶¶¶¶¶¶____
	____________¶¶________¶¶¶¶¶¶___¶¶¶¶¶¶¶¶¶¶__
	________¶¶__¶¶________¶¶¶¶¶¶___¶¶¶¶¶¶¶¶¶¶__
	__________¶¶________¶¶¶¶¶¶___¶¶¶¶¶¶¶¶¶¶¶¶¶¶
	________________¶¶¶¶¶¶¶¶¶¶_¶¶____¶¶¶¶__¶¶¶¶
	________¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶__¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶
	__¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶_¶¶¶¶¶¶____¶¶¶¶¶¶¶¶
	_¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶___¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶
	¶¶¶¶¶¶¶¶¶¶¶¶¶¶__¶¶__¶¶¶__¶¶¶¶____¶¶¶¶¶¶__¶¶
	¶¶__¶¶¶¶¶¶¶¶____¶¶__¶¶¶¶¶¶¶__¶¶¶¶¶¶¶¶¶¶__¶¶
	¶__¶¶¶¶¶¶¶¶____________¶¶__¶¶¶¶¶¶¶¶¶¶¶¶___¶
	___¶¶¶¶¶¶____¶¶¶¶________¶¶__________¶¶____
	__¶¶¶¶¶¶_______¶¶¶¶____________________¶¶__
	__¶¶¶¶¶¶¶_______¶¶¶¶__¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶_____
	__¶¶¶¶¶¶¶¶______¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶______
	___¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶____
	_____¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶_________¶¶¶¶¶¶¶¶__
	_______¶¶¶¶¶¶¶¶¶¶¶¶¶_________¶¶____¶¶¶¶¶¶__
	_________¶¶¶¶¶¶____________¶¶¶¶¶¶__¶¶¶¶¶¶¶¶
	___________¶¶____________¶¶¶¶¶¶____¶¶¶¶¶¶¶¶
	__________________________¶¶¶¶¶¶¶¶¶¶¶¶¶__¶¶
	_________¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶___¶
	_____¶¶¶¶¶¶¶____¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶__¶¶______
	___¶¶¶¶______________¶¶¶¶¶¶______¶¶________
	___¶¶__¶¶______________¶¶__________________
	_¶¶__¶¶____________________________________
	___¶¶___________¶¶__¶¶¶¶¶¶¶¶¶¶¶¶___________
	___¶¶___¶¶¶______¶¶__¶¶¶¶_______¶¶_________
	_¶¶____¶¶¶¶¶¶¶__¶¶¶¶¶¶_________¶¶¶_________
	_¶¶¶¶__¶¶__¶¶¶¶¶¶¶¶¶_________¶¶¶¶__________
	_¶¶¶¶¶¶__¶¶¶¶¶¶¶¶¶¶¶¶¶_____________________
	___¶¶¶¶¶¶¶¶¶¶¶¶¶¶¶__¶¶¶¶___________________
	_____¶¶¶¶¶¶¶¶¶¶¶___________________________
	______________¶¶___________________________

	*/
	public void printAll(Nave[] arr){
		boolean[][] pos = new boolean[10][10];
		genBoolean(arr, pos);
		Picture imp = genTabla(pos);
		Graphics g = new Graphics(imp);
		g.print();
	}
	public Picture genTabla(boolean[][] pos){
		Picture total = Picture.casilleroBlanco();
		if(pos[0][0] == true){
			total = total.invertir();
		}
		for(int i = 1; i < 10; i++){
			Picture firstCasilla = Picture.casilleroBlanco();
			if(pos[0][i] == true){
				firstCasilla = firstCasilla.invertir();
			}	
			total = total.alLado(firstCasilla);
		}
		for(int i = 1; i < 10; i++){
			Picture firstCasilla = Picture.casilleroBlanco();
			if(pos[i][0] == true){
				firstCasilla = firstCasilla.invertir();
			}
			Picture fila = firstCasilla;
			for(int j = 1; j < 10; j++){
				Picture casilla = Picture.casilleroBlanco();
				if(pos[i][j] == true){
					casilla = casilla.invertir();
				}
				fila = fila.alLado(casilla);
			}
			total = total.encima(fila);
		}
		return total;
	}

	public int colToRow(String str){
		char c = str.charAt(0);
		char[] index = {'A','B','C','D','E','F','G','H','I','J'};
		for(int i = 0; i < 10; i++){
			if(index[i] == c){
				return i+1;
			}
		}
		return 0;
	}
	public void genBoolean(Nave[] arr, boolean[][] pos){
		for(int i = 0; i < arr.length; i++){
			pos[arr[i].getFila() - 1][colToRow(arr[i].getColumna())-1] = true;
		}
	}
}
